# Generated by Django 4.2 on 2024-08-01 16:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('isbn', models.CharField(max_length=13, unique=True, verbose_name='ISBN')),
                ('author', models.CharField(max_length=200)),
                ('images_book', models.ImageField(blank=True, null=True, upload_to='books/%Y/%m/%d')),
                ('pub_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(max_length=700)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=700)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 star'), (2, '2 stars'), (3, '3 stars'), (4, '4 stars'), (5, '5 stars')])),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='core.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_ratings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='genre',
            index=models.Index(fields=['name'], name='core_genre_name_ede46a_idx'),
        ),
        migrations.AddField(
            model_name='comment',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.book'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ManyToManyField(related_name='genre_books', to='core.genre'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['book'], name='core_rating_book_id_30443a_idx'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['user'], name='core_rating_user_id_3c37b8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('book', 'user')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['book'], name='core_commen_book_id_2dc673_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user'], name='core_commen_user_id_98f009_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created'], name='core_commen_created_c3602f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('user', 'book')},
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='core_book_title_119b07_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['author'], name='core_book_author_68aaaf_idx'),
        ),
    ]
